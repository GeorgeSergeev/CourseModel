package ru.sorochinsky.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import ru.sorochinsky.model.Student;
import ru.sorochinsky.repositiry.StudentRepository;

import java.util.Map;

/**
 * Controller for {@link ru.sorochinsky.model.Student}'s pages.
 *
 * @author Ivan Sorochinsky
 * @version 1.0
 */

@Controller    // This means that this class is a Controller
@RequestMapping(path="/student_controller") // This means URL's start with /student_controller (after Application path)
public class StudentController {
    @Autowired // This means to get the bean called studentRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private StudentRepository studentRepository;

    @PostMapping(path = "/stud") // Map ONLY POST Requests
    public String add(@RequestParam String name, @RequestParam String address, @RequestParam String phone
            , @RequestParam String email, @RequestParam Integer number_gradebook
            , @RequestParam Float average_performance, Map<String, Object> model){

        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Student n = new Student();
        n.setName(name);
        n.setAddress(address);
        n.setPhone(phone);
        n.setEmail(email);
        n.setNumber_gradebook(number_gradebook);
        n.setAverage_performance(average_performance);
//          добавить поверку полей на NotNull

        studentRepository.save(n);
        Iterable<Student> students = studentRepository.findAll();
        model.put("students", students);
        return "students";
    }

    @GetMapping(path = "/stud")
    public String stud(Map<String, Object> model){
        Iterable<Student> students = studentRepository.findAll();
        model.put("students", students);
        return "students";
    }
}