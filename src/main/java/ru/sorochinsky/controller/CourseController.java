package ru.sorochinsky.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import ru.sorochinsky.model.Course;
import ru.sorochinsky.repositiry.CourseRepository;

import java.util.Map;

/**
 * Controller for {@link ru.sorochinsky.model.Course}'s pages.
 *
 * @author Ivan Sorochinsky
 * @version 1.0
 */

@Controller    // This means that this class is a Controller
@RequestMapping(path="/course_controller") // This means URL's start with /course_controller (after Application path)
public class CourseController {
    @Autowired // This means to get the bean called courseRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CourseRepository courseRepository;

    @PostMapping(path = "/course") // Map ONLY POST Requests
    public String add(@RequestParam String name, @RequestParam Integer number
            , @RequestParam Float cost, Map<String, Object> model){

        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Course n = new Course();
        n.setName(name);
        n.setNumber(number);
        n.setCost(cost);
//          добавить поверку полей на NotNull
        courseRepository.save(n);
        Iterable<Course> courses = courseRepository.findAll();
        model.put("course", courses);
        return "course";
    }

    @GetMapping(path = "/course")
    public String curs(Map<String, Object> model){
        Iterable<Course> courses = courseRepository.findAll();
        model.put("course", courses);
        return "course";
    }
}